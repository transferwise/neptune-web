# Confirm that the config file si valid:
# https://circleci.com/docs/2.0/local-cli/

version: 2

aliases:
  - &workspace-root ~/neptune-web

  - &container
    working_directory: *workspace-root
    docker:
      - image: circleci/node:lts

  - &attach-workspace
    attach-workspace:
      at: *workspace-root

  - &persist-workspace
    persist_to_workspace:
      root: .
      paths:
        - '*'

  - &setup
    name: Install dependencies and build packages
    command: yarn setup

  - &deploy-docs
    name: Deploy docs
    command: yarn docs:deploy

  - &lerna-publish
    name: Publish packages
    command: npx lerna publish -m "[skip ci] Release" --yes

  - &lerna-publish-beta
    name: Publish package(s) as beta changes
    command: |
      npx lerna publish --canary --preid beta --dist-tag beta --yes

  - &conventional-commit
    name: Conventional Commits check
    command: npx commitlint -f $(git log --author=CircleCI -1 --format=format:"%H") -V

  - &test
    name: Run tests across all packages
    command: yarn test

  - &lint
    name: Perform code linting across all packages
    command: |
      yarn lint
      yarn lintless

  - &bundlesize
    name: Pefrorm bundlesize check
    command: yarn bundlesize

  - &visual-test
    name: Visual Regression test
    command: yarn test:visual

  - &add-npm-release-token
    name: Set NPM publish token
    command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN_PUBLISH" >> ~/.npmrc

  - &set-github-credentials
    name: Set github credentials
    command: |
      mkdir -p ~/.ssh
      ssh-keyscan github.com >> ~/.ssh/known_hosts
      git config --global user.email "circleci@transferwise.com"
      git config --global user.name "CircleCI"

  - &save-yarn-cache
    key: yarn-cache-{{ checksum "yarn.lock" }}
    paths:
      - ~/.cache/yarn

  - &restore-yarn-cache
    keys:
      - yarn-cache-{{ checksum "yarn.lock" }}
      - yarn-cache-

jobs:
  setup:
    <<: *container
    steps:
      - checkout
      - restore-cache: *restore-yarn-cache
      - run: *setup
      - *persist-workspace
      - save_cache: *save-yarn-cache

  test:
    <<: *container
    steps:
      - *attach-workspace
      - run: *test

  lint:
    <<: *container
    steps:
      - *attach-workspace
      - run: *lint

  bundlesize:
    <<: *container
    resource_class: small
    steps:
      - *attach-workspace
      - run: *bundlesize

  visual-test:
    <<: *container
    steps:
      - *attach-workspace
      - run: *visual-test
      - *persist-workspace

  deploy-docs:
    <<: *container
    steps:
      - *attach-workspace
      - run: *set-github-credentials
      - run: *deploy-docs

  deploy-docs-for-branch:
    <<: *container
    steps:
      - *attach-workspace
      - run: *set-github-credentials
      - run: *deploy-docs

  conventional-commit:
    <<: *container
    resource_class: small
    steps:
      - *attach-workspace
      - run: *conventional-commit

  publish:
    <<: *container
    steps:
      - *attach-workspace
      - run: *set-github-credentials
      - run: *add-npm-release-token
      - run: *lerna-publish

  publish-beta:
    <<: *container
    steps:
      - *attach-workspace
      - run: *set-github-credentials
      - run: *add-npm-release-token
      - run: *lerna-publish-beta

workflows:
  version: 2
  build-deploy-release:
    jobs:
      - setup:
          context: frontend-build
          filters:
            branches:
              ignore: gh-pages

      - conventional-commit:
          context: frontend-build
          requires:
            - setup
          filters:
            branches:
              ignore:
                - gh-pages

      - test:
          context: frontend-build
          requires:
            - setup
          filters:
            branches:
              ignore:
                - gh-pages

      - lint:
          context: frontend-build
          requires:
            - setup
          filters:
            branches:
              ignore:
                - gh-pages

      - bundlesize:
          context: frontend-build
          requires:
            - setup
          filters:
            branches:
              ignore:
                - gh-pages
                - main

      - hold-visual-test:
          type: approval
          requires:
            - test
          filters:
            branches:
              ignore:
                - gh-pages
                - main

      - visual-test:
          requires:
            - hold-visual-test
          filters:
            branches:
              ignore:
                - gh-pages
                - main

      - deploy-docs-for-branch:
          context: frontend-build
          requires:
            - setup
          filters:
            branches:
              ignore:
                - gh-pages
                - main

      - deploy-docs:
          context: frontend-build
          requires:
            - conventional-commit
            - lint
            - test
          filters:
            branches:
              only:
                - main

      - publish:
          context: frontend-publish
          requires:
            - conventional-commit
            - lint
            - test
          filters:
            branches:
              only: main

      - hold-beta-release:
          type: approval
          requires:
            - conventional-commit
            - test
          filters:
            branches:
              ignore:
                - gh-pages
                - main

      - publish-beta:
          context: frontend-publish
          requires:
            - hold-beta-release
          filters:
            branches:
              ignore:
                - gh-pages
                - main
